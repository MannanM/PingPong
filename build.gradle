['java', 'idea', 'war', 'jetty'].each {
    apply plugin: it
}

repositories {
    mavenCentral()
}


dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')
    compile 'org.springframework:spring-context:3.1.2.RELEASE'
    compile 'org.springframework:spring-web:3.1.2.RELEASE'
    compile 'org.springframework:spring-webmvc:3.1.2.RELEASE'
    compile 'org.sakaiproject.nakamura:org.sakaiproject.nakamura.postgres-driver:9.0-801-1.5'
    compile 'commons-dbcp:commons-dbcp:1.3'
    compile 'cglib:cglib-nodep:2.2'
    compile 'org.springframework:spring-orm:3.1.2.RELEASE'
    compile 'org.hibernate:hibernate-core:3.3.0.GA'
    compile ('org.hibernate:hibernate-annotations:3.3.0.ga'){
        exclude module: 'hibernate'
    }
    compile ('org.hibernate:hibernate-commons-annotations:3.3.0.ga'){
        exclude module: 'hibernate'
    }
    compile 'org.slf4j:slf4j-log4j12:1.5.2'
    compile 'javassist:javassist:3.3.GA'
    compile 'javax.servlet:jstl:1.2'
    compile 'javax.servlet:javax.servlet-api:3.0.1'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.7.1'
}

configurations{
    tomcat
}

dependencies {
    tomcat('com.github.jsimone:webapp-runner:7.0.30.1') {
        exclude group: 'spy'
    }
}

jettyRun.configure{
    dependencies {
        runtime 'org.hsqldb:hsqldb:2.2.9'
    }
}

task stage(dependsOn: ['war'], type: Copy) {
    into "$buildDir/tomcat"
    from configurations.tomcat
}

task tomcatRun(dependsOn: ['stage'], type: Exec) {
    executable='java'
    args=['-Dspring.profiles.active=' +
            defaultProperty('spring.profiles.active', 'default'),
            '-jar', "$buildDir/tomcat/webapp-runner-7.0.30.1.jar",
            "$buildDir/libs/ping-mate.war"]
}

tomcatRun.configure {
    dependencies {
       runtime 'org.hsqldb:hsqldb:2.2.9'
    }
}

def defaultProperty(propName, defaultVal){
    return  System.getProperty(propName) == null ? defaultVal : System.getProperty(propName)
}
